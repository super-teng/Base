<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">
    <!--注解扫描的具体包 -->
    <context:component-scan base-package="pathUrl"/>
    <context:component-scan base-package="url"/>
    <context:component-scan base-package="dao"/>
    <!--加载配置文件中的信息 -->

    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--配置DBCP数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--以注解形式启动事务管理器启动代理基于CGliB来启动 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <!-- 配置sessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!--定义mapper所在具体位置,这样就不用再每一次在手动添加一个mapper了 -->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
        <!--为指定包路径下的文件自动其别名这样在写sql的时候会就不用指定全限定名了 -->
        <property name="typeAliasesPackage" value="po"/>
    </bean>
    <!--sqlTemplate 这样可以简化我们DAO的操作 当我们启动自动创建接口实现类的时候我们可以不加这个注解 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>
    <!--配置了文件的自动解析，根据接口文件可以自动的创建出接口实现类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="dao"/>
    </bean>
</beans>